Funcational Interfaces are SAM - Single Abstract Methods

All the interfaces with one Abstract Method is a Functional Interface and is annotated with @FunctionalInterface annotation.

New Functional Interfaces introduced in Java8 are:

    1. Consumer - BiConsumer
    2. Predicate - BiPredicate
    3. Function - BFunction, UnaryOperator, BinaryOperator
    4. Supplier

________________________________________________________________________

Consumer Functional Interface:

Accept some input and perform some operation on it.

Has only one method: Accept()

Example:
    1: Accept string as an input, perform uppercase operation on it and prints the string.
    2: Real world example: Print names of all the students in the group / database

    < create a List<Student>, Consumer with Lambda to print names, forEach loop to traverse each students.

    3. Prints the names of the students and the list of activities the student performs

    4. Print the names of the students whose grades are more than some value.

    // we can add multiple conditions based on the requirement. But if we need to reuse any one of the function again, then we cannot use Consumer Functional Interface.

________________________________________________________________________

BiConsumer Functional Interface:

It accepts two inputs.







